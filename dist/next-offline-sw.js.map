{"version":3,"sources":["next-offline-sw.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-offline-sw.js","sourcesContent":["(function() {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('next-js-core2');\n  var NAV = global.navigator;\n  var runtime = require('offline-plugin/runtime');\n  var DEFAULT_OPTIONS = {\n    onUpdateReady: function() {\n      console.warn(\n        'SW Event:',\n        'You need to call `nx.OfflineSw.applyUpdate` to update resource when [onUpdated].'\n      );\n    }\n  };\n\n  var NxOfflineSw = nx.declare('nx.OfflineSw', {\n    statics: {\n      runtime: runtime,\n      install: function(inOptions) {\n        var options = nx.mix(null, DEFAULT_OPTIONS, inOptions);\n        runtime.install(options);\n      },\n      uninstall: function() {\n        NAV.serviceWorker.getRegistrations().then(function(registrations) {\n          registrations.forEach(function(registration) {\n            registration.unregister();\n          });\n        });\n      },\n      update: function() {\n        var self = this;\n        return new Promise(function(resolve) {\n          self.applyUpdate(function() {\n            setTimeout(function() {\n              self.refresh();\n            }, 1000);\n          });\n        });\n      },\n      refresh: function() {\n        global.location.reload();\n      },\n      applyUpdate: function() {\n        runtime.applyUpdate();\n      }\n    }\n  });\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxOfflineSw;\n  }\n})();\n"]}